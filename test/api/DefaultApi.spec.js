/*
 * Facebook Conversions API (for Web)
 * The Conversions API (for web) allows advertisers to send web events from their servers directly to Facebook. Conversions API events are linked to a pixel and are processed like browser pixel events. This means that these conversion events are used in measurement, reporting, and optimization in the same way as browser pixel events.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: web_signals_integrations@fb.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.23
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FacebookConversionsApiForWeb);
  }
}(this, function(expect, FacebookConversionsApiForWeb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FacebookConversionsApiForWeb.DefaultApi();
  });

  describe('(package)', function() {
    describe('DefaultApi', function() {
      describe('pixelIdEventsPost', function() {
        it('should call pixelIdEventsPost successfully', function(done) {
          // TODO: uncomment, update parameter values for pixelIdEventsPost call and complete the assertions
          /*
          var body = new FacebookConversionsApiForWeb.EventRequest();
          body.data = [new FacebookConversionsApiForWeb.Event()];
          body.data[0].eventName = "";
          body.data[0].eventTime = "0";
          body.data[0].eventSourceUrl = "";
          body.data[0].optOut = false;
          body.data[0].eventId = "";
          body.data[0].actionSource = "";
          body.data[0].userData = new FacebookConversionsApiForWeb.UserData();
          body.data[0].userData.em = "joe@eg.com";
          body.data[0].userData.ph = "16505551212";
          body.data[0].userData.ge = "f";
          body.data[0].userData.db = "19971226 for December 26, 1997";
          body.data[0].userData.ln = "smith";
          body.data[0].userData.fn = "";
          body.data[0].userData.ct = "menlopark";
          body.data[0].userData.country = "us";
          body.data[0].userData.st = "ca";
          body.data[0].userData.zp = "94035";
          body.data[0].userData.externalId = "";
          body.data[0].userData.clientIpAddress = "";
          body.data[0].userData.clientUserAgent = "";
          body.data[0].userData.fbc = "";
          body.data[0].userData.fbp = "";
          body.data[0].userData.subscriptionId = "anid1234";
          body.data[0].customData = new FacebookConversionsApiForWeb.CustomData();
          body.data[0].customData.value = 142.54;
          body.data[0].customData.currency = "USD";
          body.data[0].customData.contentName = "lettuce";
          body.data[0].customData.contentCategory = "grocery";
          body.data[0].customData.contentIds = ["ABC123","XYZ789"];
          body.data[0].customData.contents = [{"id":"ABC123","quantity":2,"item_price":5.99},{"id":"XYZ789","quantity":2,"item_price":9.99}];
          body.data[0].customData.contents[0].id = "";
          body.data[0].customData.contents[0].quantity = 0;
          body.data[0].customData.contents[0].itemPrice = 0.0;
          body.data[0].customData.contentType = "";
          body.data[0].customData.orderId = "order1234";
          body.data[0].customData.predictedLtv = 432.12;
          body.data[0].customData.numItems = 4;
          body.data[0].customData.searchString = "lettuce";
          body.data[0].customData.status = "registered";
          body.data[0].dataProcessingOptions = ["LDU"];
          body.data[0].dataProcessingOptionsCountry = 0;
          body.data[0].dataProcessingOptionsState = 0;
          body.testEventCode = "";
          body.partnerAgent = "swagger";
          var pixelId = "pixelId_example";

          instance.pixelIdEventsPost(body, pixelId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(FacebookConversionsApiForWeb.ResponseSuccess);
            expect(data.eventsReceived).to.be.a('number');
            expect(data.eventsReceived).to.be(0);
            {
              let dataCtr = data.messages;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a('string');
                expect(data).to.be("");
              }
            }
            expect(data.fbtraceId).to.be.a('string');
            expect(data.fbtraceId).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
