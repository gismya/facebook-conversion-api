/*
 * Facebook Conversions API (for Web)
 * The Conversions API (for web) allows advertisers to send web events from their servers directly to Facebook. Conversions API events are linked to a pixel and are processed like browser pixel events. This means that these conversion events are used in measurement, reporting, and optimization in the same way as browser pixel events.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: web_signals_integrations@fb.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.23
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Event'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Event'));
  } else {
    // Browser globals (root is window)
    if (!root.FacebookConversionsApiForWeb) {
      root.FacebookConversionsApiForWeb = {};
    }
    root.FacebookConversionsApiForWeb.EventRequest = factory(root.FacebookConversionsApiForWeb.ApiClient, root.FacebookConversionsApiForWeb.Event);
  }
}(this, function(ApiClient, Event) {
  'use strict';

  /**
   * The EventRequest model module.
   * @module model/EventRequest
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>EventRequest</code>.
   * @alias module:model/EventRequest
   * @class
   * @param data {Array.<module:model/Event>} An array of Server Event objects.
   * @param partnerAgent {module:model/EventRequest.PartnerAgentEnum} Partner agent string.
   */
  var exports = function(data, partnerAgent) {
    this.data = data;
    this.partnerAgent = partnerAgent;
  };

  /**
   * Constructs a <code>EventRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EventRequest} obj Optional instance to populate.
   * @return {module:model/EventRequest} The populated <code>EventRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('data'))
        obj.data = ApiClient.convertToType(data['data'], [Event]);
      if (data.hasOwnProperty('test_event_code'))
        obj.testEventCode = ApiClient.convertToType(data['test_event_code'], 'String');
      if (data.hasOwnProperty('partner_agent'))
        obj.partnerAgent = ApiClient.convertToType(data['partner_agent'], 'String');
    }
    return obj;
  }

  /**
   * An array of Server Event objects.
   * @member {Array.<module:model/Event>} data
   */
  exports.prototype.data = undefined;

  /**
   * Code used to verify that your server events are received correctly by Facebook. Use this code to test your server events in the Test Events feature in Events Manager. See Test Events Tool (https://developers.facebook.com/docs/marketing-api/conversions-api/using-the-api#testEvents) for an example.
   * @member {String} testEventCode
   */
  exports.prototype.testEventCode = undefined;

  /**
   * Partner agent string.
   * @member {module:model/EventRequest.PartnerAgentEnum} partnerAgent
   * @default 'swagger'
   */
  exports.prototype.partnerAgent = 'swagger';



  /**
   * Allowed values for the <code>partnerAgent</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PartnerAgentEnum = {
    /**
     * value: "swagger"
     * @const
     */
    swagger: "swagger"
  };

  return exports;

}));
