/*
 * Facebook Conversions API (for Web)
 * The Conversions API (for web) allows advertisers to send web events from their servers directly to Facebook. Conversions API events are linked to a pixel and are processed like browser pixel events. This means that these conversion events are used in measurement, reporting, and optimization in the same way as browser pixel events.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: web_signals_integrations@fb.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.23
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FacebookConversionsApiForWeb) {
      root.FacebookConversionsApiForWeb = {};
    }
    root.FacebookConversionsApiForWeb.UserData = factory(root.FacebookConversionsApiForWeb.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The UserData model module.
   * @module model/UserData
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>UserData</code>.
   * user_data is a set of identifiers Facebook can use for targeted attribution. You must provide at least one of the following user_data keys in your request
   * @alias module:model/UserData
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>UserData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserData} obj Optional instance to populate.
   * @return {module:model/UserData} The populated <code>UserData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('em'))
        obj.em = ApiClient.convertToType(data['em'], 'String');
      if (data.hasOwnProperty('ph'))
        obj.ph = ApiClient.convertToType(data['ph'], 'String');
      if (data.hasOwnProperty('ge'))
        obj.ge = ApiClient.convertToType(data['ge'], 'String');
      if (data.hasOwnProperty('db'))
        obj.db = ApiClient.convertToType(data['db'], 'String');
      if (data.hasOwnProperty('ln'))
        obj.ln = ApiClient.convertToType(data['ln'], 'String');
      if (data.hasOwnProperty('fn'))
        obj.fn = ApiClient.convertToType(data['fn'], 'String');
      if (data.hasOwnProperty('ct'))
        obj.ct = ApiClient.convertToType(data['ct'], 'String');
      if (data.hasOwnProperty('country'))
        obj.country = ApiClient.convertToType(data['country'], 'String');
      if (data.hasOwnProperty('st'))
        obj.st = ApiClient.convertToType(data['st'], 'String');
      if (data.hasOwnProperty('zp'))
        obj.zp = ApiClient.convertToType(data['zp'], 'String');
      if (data.hasOwnProperty('external_id'))
        obj.externalId = ApiClient.convertToType(data['external_id'], 'String');
      if (data.hasOwnProperty('client_ip_address'))
        obj.clientIpAddress = ApiClient.convertToType(data['client_ip_address'], 'String');
      if (data.hasOwnProperty('client_user_agent'))
        obj.clientUserAgent = ApiClient.convertToType(data['client_user_agent'], 'String');
      if (data.hasOwnProperty('fbc'))
        obj.fbc = ApiClient.convertToType(data['fbc'], 'String');
      if (data.hasOwnProperty('fbp'))
        obj.fbp = ApiClient.convertToType(data['fbp'], 'String');
      if (data.hasOwnProperty('subscription_id'))
        obj.subscriptionId = ApiClient.convertToType(data['subscription_id'], 'String');
    }
    return obj;
  }

  /**
   * A hashed email address in lower case using SHA-256 algorithm.
   * @member {String} em
   */
  exports.prototype.em = undefined;

  /**
   * A hashed phone number using SHA-256 algorithm. Include only digits with country code, area code, and number.
   * @member {String} ph
   */
  exports.prototype.ph = undefined;

  /**
   * A hashed gender (f or m) using SHA-256 algorithm.
   * @member {String} ge
   */
  exports.prototype.ge = undefined;

  /**
   * A hashed date of birth given as year, month, and day using SHA-256 algorithm
   * @member {String} db
   */
  exports.prototype.db = undefined;

  /**
   * A hashed last name in lowercase using SHA-256 algorithm.
   * @member {String} ln
   */
  exports.prototype.ln = undefined;

  /**
   * A hashed first name in lowercase using SHA-256 algorithm.
   * @member {String} fn
   */
  exports.prototype.fn = undefined;

  /**
   * A hashed city in lower-case without spaces or punctuation using SHA-256 algorithm.
   * @member {String} ct
   */
  exports.prototype.ct = undefined;

  /**
   * A hashed two-letter country code in lowercase using SHA-256 algorithm.
   * @member {String} country
   */
  exports.prototype.country = undefined;

  /**
   * A hashed two-letter state code in lowercase using SHA-256 algorithm.
   * @member {String} st
   */
  exports.prototype.st = undefined;

  /**
   * A hashed zip code using SHA-256 algorithm. If you are in the United States, this is a five-digit zip code. For other locations, follow each country's standards.
   * @member {String} zp
   */
  exports.prototype.zp = undefined;

  /**
   * Any unique ID from the advertiser, such as loyalty membership IDs, user IDs, and external cookie IDs. If External ID is being sent via other channels, it should be sent in the same format via Conversions API. Hashing external_id using SHA-256 algorithm is optional.
   * @member {String} externalId
   */
  exports.prototype.externalId = undefined;

  /**
   * The IP address of the browser corresponding to the event.
   * @member {String} clientIpAddress
   */
  exports.prototype.clientIpAddress = undefined;

  /**
   * The user agent for the browser corresponding to the event.
   * @member {String} clientUserAgent
   */
  exports.prototype.clientUserAgent = undefined;

  /**
   * The Facebook click ID value stored in the _fbc browser cookie under your domain. See Managing fbc and fbp Parameters for how to get this value (https://developers.facebook.com/docs/marketing-api/conversions-api/parameters/fbp-and-fbc), or generate this value from a fbclid query parameter.
   * @member {String} fbc
   */
  exports.prototype.fbc = undefined;

  /**
   * The Facebook browser ID value stored in the _fbp browser cookie under your domain. See Managing fbc and fbp Parameters for how to get this value (https://developers.facebook.com/docs/marketing-api/conversions-api/parameters/fbp-and-fbc).
   * @member {String} fbp
   */
  exports.prototype.fbp = undefined;

  /**
   * The subscription ID for the user in this transaction. This is similar to the order ID for an individual product.
   * @member {String} subscriptionId
   */
  exports.prototype.subscriptionId = undefined;


  return exports;

}));
